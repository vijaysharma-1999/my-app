{"version":3,"sources":["Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","nameofsite","type","id","onClick","switchbtn","role","htmlFor","switchText","Textform","useState","textUpper","setText","a","length","heading","style","backgroundColor","color","value","onChange","event","target","rows","uppercase","toUpperCase","showAlert","lowercase","toLowerCase","copytext","document","getElementById","select","navigator","clipboard","writeText","split","Alert","alert","class","msg","defaultProps","othermsg","App","setalert","massage","setTimeout","setswitchText","setmode","body","title","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c23a7743.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nexport function Navbar(props) {\r\n    return (\r\n<>\r\n\r\n {/* Navbar */}\r\n <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n<strong><a className=\"navbar-brand\" href=\"#\"><big><big>{props.nameofsite}</big></big></a></strong>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/About\">{props.othermsg}</Link> */}\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n      </form> */}\r\n    </div>\r\n  </div>\r\n  <div className=\"form-check form-check-inline\">\r\n  {/* <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"/>\r\n  <label className=\"form-check-label text-success\" for=\"inlineRadio1\"><small><b>Green-Mode</b></small></label>\r\n</div>\r\n<div className=\"form-check form-check-inline\">\r\n  <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\r\n  <label className=\"form-check-label text-danger\" for=\"inlineRadio2\"><small><b>Red-Mode</b></small></label> */}\r\n</div>\r\n              <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n              <input className=\"form-check-input\"  type=\"checkbox\" onClick={props.switchbtn} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.switchText}</label>\r\n              </div>\r\n</nav>\r\n</>\r\n    )\r\n}\r\nNavbar.propTypes= {\r\n  nameofsite: PropTypes.string.isRequired,\r\n  othermsg: PropTypes.string,\r\n}\r\nNavbar.defaultProps ={\r\n  nameofsite: \"jadoo\",\r\n  othermsg: \"about blank\"\r\n} ","import React, {useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const Textup = ()=>{\r\n        // console.log(\"clicked\");\r\n        let uppercase =textUpper.toUpperCase();\r\n        setText(uppercase);\r\n        props.showAlert('Text converted to Upper Case','Success')\r\n    }\r\n    const Textdown = ()=>{\r\n        // console.log(\"To lower case\");\r\n        let lowercase =textUpper.toLowerCase();\r\n        setText(lowercase);\r\n        props.showAlert('Text converted to Lower Case','Success')\r\n    }\r\n    const onChange = (event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value)\r\n    }\r\n    const clear = ()=>{\r\n        // console.log(\"on change\");\r\n        setText(' ')\r\n        props.showAlert('Text is cleared','Success')\r\n    }\r\n    const copy =()=>{\r\n        // console.log(\"copy button\")\r\n        let copytext = document.getElementById(\"exampleFormControlTextarea1\");\r\n        copytext.select();\r\n        navigator.clipboard.writeText(copytext.value);\r\n        props.showAlert('copied to clipboard','Success')\r\n\r\n    }\r\n    // setText(\"The Text has been changed\")\r\n    const [textUpper, setText]= useState('');\r\n    // ________________________________________________________________\r\n        // let str =textUpper;\r\n        // str.length;\r\n        \r\n    // const char =()=>{\r\n\r\n    // }\r\n    const a = textUpper.length;\r\n    return (\r\n<>\r\n\r\n<div className=\"container my-5 font-size-bold\">\r\n\r\n<div>\r\n            \r\n        <div className=\"mb-3\">\r\n        <h1 className ={`text-${props.mode===`dark`?`light`:`dark`}`}> {props.heading} </h1>\r\n        <textarea className=\"form-control\" style={{backgroundColor:props.mode===`dark`?`lightgrey`:`white`, color:props.mode===`dark`}} value={textUpper} onChange={onChange}id=\"exampleFormControlTextarea1\" rows=\"4\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary \" onClick={Textup}>Change to Upper Case</button>\r\n        <button className=\"btn btn-danger mx-5\" onClick={Textdown}>Change to Lower Case</button>\r\n        <button className=\"btn btn-secondary\" onClick={clear}>Clear text</button>\r\n        <button className=\"btn btn-warning mx-5\" onClick={copy}>Copy text</button>\r\n\r\n</div>\r\n            <div className={` container my-3 text-${props.mode===`dark`?`light`:`dark`} `} >\r\n                <h2 >Your Text Summary </h2>\r\n                <div className='container'>\r\n                <p className=\"my-1\">{textUpper.split(\" \").length} words and  {a} Alphabets</p>\r\n                <p className=\"my-1\">Average time to read the above text is {1*textUpper.split(\" \").length } seconds</p>\r\n                <p >Note: The average time is 60WPM</p>\r\n                <h2>Preview</h2>\r\n                <p>{textUpper.length>0?textUpper:`You Haven't entered anything `}</p>\r\n                </div>\r\n</div>\r\n</div>\r\n\r\n</>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div class={`alert alert-${props.alert.type==='Success'?'success':'dark'}  py-1 rounded-pill alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong> {props.alert.msg}\r\n  {/* <button type=\"button\" class=\"btn-close py-1 \" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n</div>\r\n    )\r\n}\r\n","import './App.css';\nimport {Navbar} from \"./Components/Navbar\";\n// import About from './Components/About';\nimport Textform from './Components/Textform'\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n\n// } from 'react-router-dom';\n\n\n  function App() {\n    const[alert,setalert]=useState(null)\n    const showAlert=(massage,type)=>{\n      setalert({\n        msg:massage,\n        type:type\n      })\n      setTimeout(() => {\n        setalert(null);\n      }, 1000);\n     }\n    const[switchText,setswitchText]=useState(\"Enable Dark Mode\")\n    const[mode,setmode]=useState(\"light\")\n    const switchBtn =()=>{\n      if (mode === \"dark\") {\n        setmode('light');\n        document.body.style.backgroundColor='rgb(214 213 216)';\n        setswitchText('Enable Dark Mode')\n   showAlert('Light Mode Opted Successfully','Success') \n   document.title= \"Wordpress-Light Mode\";\n   setInterval(() => {\n     document.title= \"Virus Found! \";\n     \n   }, 5000 ); \n   setInterval(() => {\n     document.title= \"loading........... \";\n     \n   }, 1500); \n  } else {\n    setmode('dark');\n    document.body.style.backgroundColor='rgb(57 51 83)'\n    setswitchText('Disable Dark Mode')\n    showAlert('Dark Mode Opted Successfully','Success') \n    document.title= \"Wordpress-Dark Mode\"; \n      }\n    }      \n    return (\n      <>\n      {/* <Router> */}\n      <Navbar nameofsite =\"Text-Ch@nger\" othermsg=\"About\" mode={mode}   switchText={switchText} switchbtn={switchBtn}/>\n              <Alert alert= {alert}/>\n              {/* ___________________________________________________________ */}\n                <div className=\"container\">\n\n                {/* <Switch>\n                <Route path=\"/About\">\n                <About/>\n                </Route> */}\n\n                {/* _________________________________________________________________ */}\n\n                {/* <Route path=\"/\"> */}\n                <Textform mode={mode}  showAlert={showAlert} heading=\"Enter something About our site\"/>\n                {/* </Route> */}\n              {/* </Switch> */}\n                </div>\n      {/* </Router> */}\n    </>\n  );    }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}